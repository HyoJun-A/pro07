package kr.go.unikr.controller;

import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.UUID;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.go.unikr.service.CardService;

@Controller
@RequestMapping("/card/*")
public class CardController {
	private static final Logger log = LoggerFactory.getLogger(CardController.class);

	@Autowired
	CardService cardService;
	
	@GetMapping("test")
	public String test() {
		return "card/test";
	}
	
	@GetMapping("addForm.do")
	public String addForm() {
		return "card/cardAdd";
	}
	
	// 이미지 업로드 처리 - org.springframework.web.multipart.MultipartFile를 이용하는 경우
	@PostMapping("upload.do")
	public String upload2(HttpServletRequest request, RedirectAttributes rttr,
		List<MultipartFile> files, Model model) throws Exception {
			//=========== 파일 업로드 작업 시작 ==============
			log.info("files 매개변수 : " + files);
			if (files != null) {
				log.info("업로드한 첨부파일 개수 : " + files.size());
			}
			
			//현재 프로젝트 디렉토리를 상대경로로 설정
			ServletContext application = request.getSession().getServletContext();
			String realPath = application.getRealPath("/resources/upload");
			log.info("realPath : " + realPath);
			
			File uploadPath = new File(realPath, getDateFolder());
	
			if (!uploadPath.exists()) {
				uploadPath.mkdirs();
		}
				
		for (MultipartFile multipartFile : files) {
			if (multipartFile.isEmpty()) {
				continue;
			}
			
			String uploadFilename = multipartFile.getOriginalFilename();
			
			UUID uuid = UUID.randomUUID();
			uploadFilename = uuid.toString() + "_" + uploadFilename;
			log.info("업로드 파일 경로 및 이름 : "+uploadFilename);
			multipartFile.transferTo(new File(uploadPath, uploadFilename));
			model.addAttribute("filename", uploadFilename);
			model.addAttribute("filename", realPath);
		}			
		return "card/cardAdd";
	}
	
	
	
	private String getDateFolder() {
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd");
		Date date = new Date();
		String str = sdf.format(date);
		return str;
	}
}
